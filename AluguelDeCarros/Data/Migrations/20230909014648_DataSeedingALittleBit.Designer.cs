// <auto-generated />
using System;
using AluguelDeCarros.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AluguelDeCarros.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230909014648_DataSeedingALittleBit")]
    partial class DataSeedingALittleBit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AluguelDeCarros.Models.Carros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Marca")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Marca = 3,
                            Name = "Celta"
                        },
                        new
                        {
                            Id = 2,
                            Marca = 2,
                            Name = "Uno"
                        },
                        new
                        {
                            Id = 3,
                            Marca = 2,
                            Name = "Palio"
                        },
                        new
                        {
                            Id = 4,
                            Marca = 4,
                            Name = "Fusion"
                        },
                        new
                        {
                            Id = 5,
                            Marca = 10,
                            Name = "C4 Lounge"
                        },
                        new
                        {
                            Id = 6,
                            Marca = 5,
                            Name = "Civic lxr"
                        },
                        new
                        {
                            Id = 7,
                            Marca = 11,
                            Name = "Dodge Ram"
                        },
                        new
                        {
                            Id = 8,
                            Marca = 3,
                            Name = "Corvette C7 Stingray"
                        },
                        new
                        {
                            Id = 9,
                            Marca = 12,
                            Name = "C63"
                        },
                        new
                        {
                            Id = 10,
                            Marca = 1,
                            Name = "Gol"
                        },
                        new
                        {
                            Id = 11,
                            Marca = 7,
                            Name = "Prius"
                        });
                });

            modelBuilder.Entity("AluguelDeCarros.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ddd@gmail.com",
                            Name = "Rodrigo"
                        });
                });

            modelBuilder.Entity("AluguelDeCarros.Models.Carros", b =>
                {
                    b.HasOne("AluguelDeCarros.Models.Usuario", null)
                        .WithMany("Carros")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AluguelDeCarros.Models.Usuario", b =>
                {
                    b.Navigation("Carros");
                });
#pragma warning restore 612, 618
        }
    }
}
